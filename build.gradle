plugins {
	id 'groovy'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.diffplug.spotless' version '6.15.0'
	id 'org.springdoc.openapi-gradle-plugin' version '1.6.0'
}

group = 'net.frey'
version = '0.0.1-SNAPSHOT'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.5.3.Final"
	springdocVersion = "2.1.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	implementation "org.flywaydb:flyway-mysql"

	implementation "com.opencsv:opencsv:5.7.1"

	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocVersion"
	implementation "org.springdoc:springdoc-openapi-starter-common:$springdocVersion"

	implementation "org.mapstruct:mapstruct:$mapstructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.jupiter'
		exclude group: 'org.mockito'
	}

	testImplementation platform('org.spockframework:spock-bom:2.4-M1-groovy-4.0')
	testImplementation 'org.spockframework:spock-core'
	testImplementation 'org.spockframework:spock-spring'

	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.tomtom.http:goji-http-client:3.1.1'
	testImplementation 'com.atlassian.oai:swagger-request-validator-restassured:2.35.1'

}

test {
	useJUnitPlatform()

	testLogging {
		debug {
			events "failed"
		}
	}
}

rootProject.afterEvaluate(){
	def forkedSpringBootRun = project.tasks.named("forkedSpringBootRun")
	forkedSpringBootRun.configure {
		doNotTrackState("See https://github.com/springdoc/springdoc-openapi-gradle-plugin/issues/102")
	}
}

openApi {
	apiDocsUrl.set("http://localhost:8080/v3/api-docs.yaml")
	outputDir.set(file("$buildDir/docs"))
	outputFileName.set("openapi.yaml")
}

compileJava {
	options.compilerArgs += [
		'-Amapstruct.defaultComponentModel=spring'
	]
}

spotless {
	java {
		removeUnusedImports()
		palantirJavaFormat()
	}
}

compileJava.dependsOn(spotlessApply)